# Generated by Django 5.2.1 on 2025-06-01 08:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Plan Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Price')),
                ('duration_days', models.PositiveIntegerField(verbose_name='Duration (days)')),
                ('features', models.TextField(help_text='List features separated by new line', verbose_name='Features')),
                ('excluded_features', models.TextField(blank=True, help_text='List excluded features separated by new line', verbose_name='Excluded Features')),
                ('personal_training_sessions', models.PositiveIntegerField(default=0, verbose_name='Personal Training Sessions')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Popular')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('color', models.CharField(default='gray', max_length=20, verbose_name='Theme Color')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Slug')),
                ('description', models.TextField(verbose_name='Description')),
                ('color_class', models.CharField(max_length=50, verbose_name='CSS Color Class')),
                ('icon', models.CharField(max_length=50, verbose_name='Font Awesome Icon')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Workout Type',
                'verbose_name_plural': 'Workout Types',
            },
        ),
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.CharField(max_length=100, verbose_name='Specialization')),
                ('experience_years', models.PositiveIntegerField(verbose_name='Years of Experience')),
                ('certifications', models.TextField(help_text='List certifications separated by comma', verbose_name='Certifications')),
                ('bio', models.TextField(blank=True, verbose_name='Biography')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='trainers/', verbose_name='Photo')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trainer',
                'verbose_name_plural': 'Trainers',
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('status', models.CharField(choices=[('active', 'Активний'), ('expired', 'Закінчився'), ('suspended', 'Призупинено'), ('cancelled', 'Скасовано')], default='active', max_length=20, verbose_name='Status')),
                ('auto_renew', models.BooleanField(default=False, verbose_name='Auto Renew')),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Payment Amount')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.subscriptionplan', verbose_name='Plan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Amount')),
                ('payment_method', models.CharField(choices=[('card', 'Картка'), ('cash', 'Готівка'), ('bank_transfer', 'Банківський переказ'), ('online', 'Онлайн платіж')], max_length=20, verbose_name='Payment Method')),
                ('status', models.CharField(choices=[('pending', 'Очікує'), ('completed', 'Завершено'), ('failed', 'Неуспішно'), ('refunded', 'Повернено')], default='pending', max_length=20, verbose_name='Payment Status')),
                ('transaction_id', models.CharField(blank=True, max_length=100, verbose_name='Transaction ID')),
                ('description', models.CharField(max_length=200, verbose_name='Payment Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.usersubscription', verbose_name='Subscription')),
            ],
            options={
                'verbose_name': 'Payment History',
                'verbose_name_plural': 'Payment History',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Class Name')),
                ('weekday', models.IntegerField(choices=[(0, 'Понеділок'), (1, 'Вівторок'), (2, 'Середа'), (3, 'Четвер'), (4, "П'ятниця"), (5, 'Субота'), (6, 'Неділя')], verbose_name='Weekday')),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
                ('max_participants', models.PositiveIntegerField(verbose_name='Max Participants')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.trainer', verbose_name='Trainer')),
                ('workout_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.workouttype', verbose_name='Workout Type')),
            ],
            options={
                'verbose_name': 'Workout Schedule',
                'verbose_name_plural': 'Workout Schedules',
                'ordering': ['weekday', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='WorkoutBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Workout Date')),
                ('status', models.CharField(choices=[('pending', 'Очікує'), ('confirmed', 'Підтверджено'), ('cancelled', 'Скасовано'), ('completed', 'Завершено'), ('no_show', "Не з'явився")], default='confirmed', max_length=20, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('schedule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.workoutschedule', verbose_name='Schedule')),
            ],
            options={
                'verbose_name': 'Workout Booking',
                'verbose_name_plural': 'Workout Bookings',
                'ordering': ['-date', '-created_at'],
                'unique_together': {('user', 'schedule', 'date')},
            },
        ),
        migrations.CreateModel(
            name='WorkoutSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Workout Date')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Duration (minutes)')),
                ('calories_burned', models.PositiveIntegerField(blank=True, null=True, verbose_name='Calories Burned')),
                ('heart_rate_avg', models.PositiveIntegerField(blank=True, null=True, verbose_name='Average Heart Rate')),
                ('heart_rate_max', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max Heart Rate')),
                ('exercises_data', models.JSONField(blank=True, default=dict, help_text='JSON with exercise information, sets, reps, weight', verbose_name='Exercise Data')),
                ('notes', models.TextField(blank=True, verbose_name='Trainer Notes')),
                ('user_notes', models.TextField(blank=True, verbose_name='User Notes')),
                ('rating', models.PositiveIntegerField(blank=True, null=True, verbose_name='Workout Rating (1-5)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('booking', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.workoutbooking', verbose_name='Workout Booking')),
                ('trainer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.trainer', verbose_name='Trainer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('workout_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.workouttype', verbose_name='Workout Type')),
            ],
            options={
                'verbose_name': 'Workout Session',
                'verbose_name_plural': 'Workout Sessions',
                'ordering': ['-date', '-created_at'],
            },
        ),
    ]
